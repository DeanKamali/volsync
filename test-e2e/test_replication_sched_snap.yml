---
- hosts: localhost
  tags:
    - cli
    - rsync
  tasks:
    - include_role:
        name: create_namespace

    - name: Create source PVC
      kubernetes.core.k8s:
        state: present
        definition:
          kind: PersistentVolumeClaim
          apiVersion: v1
          metadata:
            name: data-source
            namespace: "{{ namespace }}"
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi

    - name: Write data into the source PVC
      include_role:
        name: write_to_pvc
      vars:
        data: 'data'
        path: '/datafile'
        pvc_name: 'data-source'
        pvc_namespace: "{{ namespace }}"

    - name: Create replication relationship
      include_role:
        name: cli
      vars:
        params:
          - "replication"
          - "-r"
          - "replication"
          - "create"

    - name: Set source of replication
      include_role:
        name: cli
      vars:
        params:
          - "replication"
          - "-r"
          - "replication"
          - "set-source"
          - "--pvcname"
          - "{{namespace}}/data-source"
          - "--copymethod"
          - "Snapshot"

    - name: Set destination of replication
      include_role:
        name: cli
      vars:
        params:
          - "replication"
          - "-r"
          - "replication"
          - "set-destination"
          - "--destination"
          - "{{namespace}}/data-dest"
          - "--copymethod"
          - "Snapshot"

    - name: Set replication schedule
      include_role:
        name: cli
      vars:
        params:
          - "replication"
          - "-r"
          - "replication"
          - "schedule"
          - "--cronspec"
          - "0 0 1 1 *"
        timeout: 300  # Command doesn't return until keys have been generated & copied

    - name: Wait for sync to complete
      kubernetes.core.k8s_info:
        api_version: volsync.backube/v1alpha1
        kind: ReplicationDestination
        name: data-dest
        namespace: "{{ namespace }}"
      register: res
      until: >
        res.resources | length > 0 and
        res.resources[0].status.latestImage is defined and
        res.resources[0].status.latestImage.kind == "VolumeSnapshot"
      delay: 1
      retries: 900

    - name: Convert latestImage to PVC
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: data-dest
            namespace: "{{ namespace }}"
          spec:
            accessModes:
              - ReadWriteOnce
            dataSource:
              kind: VolumeSnapshot
              apiGroup: snapshot.storage.k8s.io
              name: "{{ res.resources[0].status.latestImage.name }}"
            resources:
              requests:
                storage: 1Gi

    - name: Verify contents of PVC
      include_role:
        name: compare_pvc_data
      vars:
        pvc_namespace: "{{ namespace }}"
        pvc1_name: data-source
        pvc2_name: data-dest
        timeout: 900
