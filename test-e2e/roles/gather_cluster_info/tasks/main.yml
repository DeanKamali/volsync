---

- name: Probe cluster information
  kubernetes.core.k8s_cluster_info:
  register: cluster_info

- name: Determine if cluster is OpenShift
  ansible.builtin.set_fact:
    cluster_info: >
      {{ cluster_info | combine({
        'is_openshift': cluster_info.apis["security.openshift.io/v1"] is defined
      }, recursive=True) }}

# Probe configuration specific to OpenShift
- when: cluster_info.is_openshift
  block:
    - name: Look for restricted-v2 SCC
      kubernetes.core.k8s_info:
        api_version: security.openshift.io/v1
        kind: SecurityContextConstraints
        name: restricted-v2
      register: res_v2

    - name: Save OpenShift information
      ansible.builtin.set_fact:
        cluster_info: >
          {{ cluster_info | combine({
            'openshift_has_scc_restricted_v2': res_v2.resources | length > 0,
            'version': {
              'server': {
                'openshift': {
                  'major': '4',
                  'minor': (cluster_info.version.server.kubernetes.minor | int - 13) | string
                }
              }
            }
          }, recursive=True) }}

# AnyVolumeDataSource feature gate enabled by default in 1.24 and above
- name: Determine if volume populator is supported
  ansible.builtin.set_fact:
    cluster_info: >
      {{ cluster_info | combine({
        'volumepopulator_supported': cluster_info.version.server.kubernetes.minor | regex_replace("[A-Za-z+]", "") | int >= 24
      }, recursive=True) }}

- name: Print volumepopulator_supported
  ansible.builtin.debug:
    var: cluster_info.volumepopulator_supported

- name: Determine if VolumePopulator api/crd is available
  ansible.builtin.set_fact:
    cluster_info: >
      {{ cluster_info | combine({
        'volumepopulator_api_available': cluster_info.apis["populator.storage.k8s.io/v1beta1"] is defined and
          cluster_info.apis["populator.storage.k8s.io/v1beta1"]["VolumePopulator"] is defined
      }, recursive=True) }}

- name: Print volumepopulator_api_available
  ansible.builtin.debug:
    var: cluster_info.volumepopulator_api_available

# - name: Print cluster information
#   ansible.builtin.debug:
#     var: cluster_info
